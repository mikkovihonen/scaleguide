{"version":3,"sources":["PianoWhiteKey.js","PianoBlackKey.js","PianoKeyboard.js","ChordSelector.js","App.js","serviceWorker.js","index.js"],"names":["PianoWhiteKey","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","key","value","react_default","a","createElement","style","display","width","height","background","border","borderWidth","pressed","color","marginTop","alignItems","justifyContent","note","Component","PianoBlackKey","transform","PianoKeyboard","notesPressed","pianoKeys","type","index","map","Note","chroma","includes","src_PianoWhiteKey","src_PianoBlackKey","_this2","listItems","renderKey","borderLeft","ChordSelector","chromaticScale","split","scales","Key","scale","handleNote","bind","assertThisInitialized","handleScale","handleType","handleSubmit","propagateChange","event","setState","target","onChange","preventDefault","onSubmit","marginRight","object","i","toString","replace","c","toUpperCase","App","chords","degrees","handleChordSelectorChange","scaleString","join","chord","Chord","notes","id","src_ChordSelector","textAlign","src_PianoKeyboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f6a9464.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass PianoWhiteKey extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        key: props.value,\n      };\n    }\n  \n    render() {\n      return (\n        <div style={{\n          display: \"flex\",\n          width: \"40px\",\n          height: \"120px\",\n          background: \"white\",\n          border: \"solid black\",\n          borderWidth: \"1px 1px 1px 0px\"\n          }}>\n          <div style={{\n            display: \"flex\",\n            height: \"40px\",\n            width: \"100%\",\n            background: this.props.value.pressed ? \"red\": \"white\",\n            color: this.props.value.pressed ? \"white\": \"black\",\n            marginTop: \"auto\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}>\n            <div style={{ display: \"flex\"}}>\n              { this.props.value.note }\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  export default PianoWhiteKey;","import React, { Component } from 'react';\n\nclass PianoBlackKey extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        value: props.value,\n      };\n    }\n  \n    render() {\n      return (\n        <div style={{width:\"0px\", display: \"flex\"}}>\n          <div style={{\n              display: \"flex\",\n              transform: \"translateX(-50%)\",\n              height: \"70px\",\n              background: \"#150b13\",\n              color: \"white\",\n              border: \"1px solid #150b13\"\n            }}>\n            <div style={{\n              display: \"flex\",\n              height: \"30px\",\n              width: \"30px\",\n              background: this.props.value.pressed ? \"red\": \"#150b13\",\n              marginTop: \"auto\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}>\n              <div style={{ display: \"flex\" }}>\n                { this.props.value.note }\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default PianoBlackKey;","import React, { Component } from 'react';\nimport { Note } from 'tonal'\n\nimport PianoWhiteKey from './PianoWhiteKey.js';\nimport PianoBlackKey from './PianoBlackKey.js';\n\nclass PianoKeyboard extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: null,\n        notesPressed: props.value.notesPressed,\n        pianoKeys: [\n            {\"note\": \"C\", \"type\": \"white\"},\n            {\"note\": \"C#\", \"type\": \"black\"},\n            {\"note\": \"D\", \"type\": \"white\"},\n            {\"note\": \"D#\", \"type\": \"black\"},\n            {\"note\": \"E\", \"type\": \"white\"},\n            {\"note\": \"F\", \"type\": \"white\"},\n            {\"note\": \"F#\", \"type\": \"black\"},\n            {\"note\": \"G\", \"type\": \"white\"},\n            {\"note\": \"G#\", \"type\": \"black\"},\n            {\"note\": \"A\", \"type\": \"white\"},\n            {\"note\": \"A#\", \"type\": \"black\"},\n            {\"note\": \"B\", \"type\": \"white\"},\n        ]\n      };\n    }\n  \n    renderKey(key, index) {\n        key.pressed = this.props.value.notesPressed.map(note => Note.chroma(note)).includes(Note.chroma(key.note));\n        return (\n            (key.type === \"white\") ?\n                <PianoWhiteKey key={\"pianoKey_\" + index} value={ key } /> :\n                <PianoBlackKey key={\"pianoKey_\" + index} value={ key } />\n        )\n    }\n\n    render() {\n        const listItems = this.state.pianoKeys.map((key, index) =>\n            this.renderKey(key, index)\n        );\n        return (\n            <div>\n            <div style={{display: \"flex\", borderLeft: \"1px solid #150b13\"}}>\n                { listItems }\n            </div>\n            <div style={{height:\"20px\"}}></div>\n            </div>\n        );\n    }\n  }\n\n  export default PianoKeyboard;","import React, { Component } from 'react';\nimport * as Key from 'tonal-key';\n\nclass ChordSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chromaticScale: \"C C# D D# E F F# G G# A A# B\".split(\" \"),\n            scales: Key.modeNames(true),\n            note: 'C',\n            scale: 'major',\n            type: 'triads'\n        };  \n        this.handleNote = this.handleNote.bind(this);\n        this.handleScale = this.handleScale.bind(this);\n        this.handleType = this.handleType.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.propagateChange(this.state.note, this.state.scale, this.state.type);\n    }\n  \n    handleNote(event) {\n        this.setState({\n            note: event.target.value,\n        });\n        this.propagateChange(event.target.value, this.state.scale, this.state.type);\n    }\n    handleScale(event) {\n        this.setState({\n            scale: event.target.value,\n        });\n        this.propagateChange(this.state.note, event.target.value, this.state.type);\n    }\n    handleType(event) {\n        this.setState({\n            type: event.target.value,\n        });\n        this.propagateChange(this.state.note, this.state.scale, event.target.value);\n    }\n\n    propagateChange(note, scale, type) {\n        if(typeof this.props.onChange === \"function\") {\n            this.props.onChange(note, scale, type);\n        }\n    }\n    \n    handleSubmit(event) {\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label style={{\n              marginRight: \"5px\"\n          }}>\n            Key\n            <select value={this.state.note} onChange={this.handleNote}>\n                {this.state.chromaticScale.map((object, i) => <option key={object.toString()} value={object}>{object.replace(/^\\w/, c => c.toUpperCase())}</option>)}\n            </select>\n          </label>\n          <label style={{\n              marginRight: \"5px\"\n          }}>\n            Mode\n            <select value={this.state.scale} onChange={this.handleScale}>\n                {this.state.scales.map((object, i) => <option key={object.toString()} value={object}>{object.replace(/^\\w/, c => c.toUpperCase())}</option>)}\n            </select>\n          </label>\n          <label>\n            Type\n            <select value={this.state.type} onChange={this.handleType}>\n                <option value=\"triads\">Triads</option>\n                <option value=\"chords\">Chords</option>\n            </select>\n          </label>\n        </form>\n      );\n    }\n  }\n\n  export default ChordSelector;","import React, { Component } from 'react';\nimport './App.css';\nimport PianoKeyboard from './PianoKeyboard.js';\nimport ChordSelector from './ChordSelector.js';\nimport * as Key from 'tonal-key';\nimport { Chord } from 'tonal';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chords: [],\n      degrees: []\n    };\n    this.handleChordSelectorChange = this.handleChordSelectorChange.bind(this);\n  }\n\n  handleChordSelectorChange(note, scale, type) {\n    const scaleString = [note, scale].join(\" \");\n    this.setState({\n      chords: ((\"triads\" === type) ? Key.triads(scaleString) : Key.chords(scaleString)).map(chord => Chord.notes(chord)),\n      degrees: Key.degrees(scaleString)\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"backgroundWrapper\">\n        <div>\n        <h1>Scaleguide</h1>\n        <ChordSelector onChange={this.handleChordSelectorChange}/>\n        <br/>\n        <div id=\"chordsWrapper\">\n          { this.state.chords.map(\n            (object, i) =>\n            <div key={\"pianoKeyboardWrapper_\" + i} style={{ display: \"flex\", alignItems: \"center\"}}>\n              <h2 style={{width: \"30px\", textAlign: \"center\"}}>{this.state.degrees[i]}</h2>\n              <PianoKeyboard key={\"pianoKeyboard_\" + i} value = {{ notesPressed: object }}/>\n            </div>\n          )}\n        </div>\n        <br/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}