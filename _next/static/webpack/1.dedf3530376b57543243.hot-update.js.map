{"version":3,"file":"static/webpack/1.dedf3530376b57543243.hot-update.js","sources":["webpack:///./components/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PianoKeyboard from './PianoKeyboard.js';\nimport ChordSelector from './ChordSelector.js';\nimport * as Key from 'tonal-key';\nimport { Chord, Scale } from 'tonal';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rootNote: (props.note !== undefined) ? props.note : \"C\",\n      mode: (props.mode !== undefined) ? props.mode : \"major\",\n      type: (props.type !== undefined) ? props.type : \"triads\",\n      chords: [],\n      degrees: [],\n      scale: []\n    };\n    this.handleChordSelectorChange = this.handleChordSelectorChange.bind(this);\n  }\n\n  handleChordSelectorChange(note, mode, type) {\n    const scaleString = [note, mode].join(\" \");\n    if(typeof this.props.onSelectorChange === \"function\") this.props.onSelectorChange(note, mode, type);\n    this.setState({\n      rootNote: note,\n      mode: mode,\n      scale: Scale.notes(scaleString),\n      chords: ((\"triads\" === type) ? Key.triads(scaleString) : Key.chords(scaleString)).map(chord => Chord.notes(chord)),\n      degrees: Key.degrees(scaleString)\n    }) \n  }\n\n  render() {\n    return (\n      <div>\n      <h2 className=\"printOnly\">{ this.state.rootNote + \" \" + this.state.mode }</h2>\n      <ChordSelector\n        onChange = { this.handleChordSelectorChange }\n        note = { this.state.rootNote }\n        mode = { this.state.mode }\n        type = { this.state.type }\n      />\n      <h2>Notes</h2>\n        <PianoKeyboard notesPressed={this.state.scale} rootNote={this.state.rootNote}/>\n      <h2>Degrees</h2>\n      <div id=\"chordsWrapper\">\n        { this.state.chords.map(\n          (object, i) =>\n          <div key={\"pianoKeyboardWrapper_\" + i} style={{ display: \"flex\"}}>\n            <div style={{ display: \"flex\", marginBottom: \"10px\"}}>\n              <h2 style={{width: \"30px\", textAlign: \"center\"}}>{this.state.degrees[i]}</h2>\n              <PianoKeyboard key={\"pianoKeyboard_\" + i} notesPressed = {object} rootNote=\"C\" />\n            </div>\n          </div>\n        ) }\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAVA;AAWA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAOA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;;;;AApDA;AACA;AAsDA;;;;A","sourceRoot":""}