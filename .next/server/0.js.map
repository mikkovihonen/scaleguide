{"version":3,"file":"0.js","sources":["webpack:///./src/App.js","webpack:///./src/ChordSelector.js","webpack:///./src/PianoBlackKey.js","webpack:///./src/PianoKeyboard.js","webpack:///./src/PianoWhiteKey.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PianoKeyboard from './PianoKeyboard.js';\nimport ChordSelector from './ChordSelector.js';\nimport * as Key from 'tonal-key';\nimport { Chord } from 'tonal';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chords: [],\n      degrees: []\n    };\n    this.handleChordSelectorChange = this.handleChordSelectorChange.bind(this);\n  }\n\n  handleChordSelectorChange(note, scale, type) {\n    const scaleString = [note, scale].join(\" \");\n    this.setState({\n      chords: ((\"triads\" === type) ? Key.triads(scaleString) : Key.chords(scaleString)).map(chord => Chord.notes(chord)),\n      degrees: Key.degrees(scaleString)\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"backgroundWrapper\">\n        <div>\n        <h1>Scaleguide</h1>\n        <ChordSelector onChange={this.handleChordSelectorChange}/>\n        <h2>Notes</h2>\n        <h2>Degrees</h2>\n        <div id=\"chordsWrapper\">\n          { this.state.chords.map(\n            (object, i) =>\n            <div key={\"pianoKeyboardWrapper_\" + i} style={{ display: \"flex\", alignItems: \"center\"}}>\n              <h2 style={{width: \"30px\", textAlign: \"center\"}}>{this.state.degrees[i]}</h2>\n              <PianoKeyboard key={\"pianoKeyboard_\" + i} value = {{ notesPressed: object }}/>\n            </div>\n          )}\n        </div>\n        <h2>Common chord progressions</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport * as Key from 'tonal-key';\n\nclass ChordSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chromaticScale: \"C C# D D# E F F# G G# A A# B\".split(\" \"),\n            scales: Key.modeNames(true),\n            note: 'C',\n            scale: 'major',\n            type: 'triads'\n        };  \n        this.handleNote = this.handleNote.bind(this);\n        this.handleScale = this.handleScale.bind(this);\n        this.handleType = this.handleType.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.propagateChange(this.state.note, this.state.scale, this.state.type);\n    }\n  \n    handleNote(event) {\n        this.setState({\n            note: event.target.value,\n        });\n        this.propagateChange(event.target.value, this.state.scale, this.state.type);\n    }\n    handleScale(event) {\n        this.setState({\n            scale: event.target.value,\n        });\n        this.propagateChange(this.state.note, event.target.value, this.state.type);\n    }\n    handleType(event) {\n        this.setState({\n            type: event.target.value,\n        });\n        this.propagateChange(this.state.note, this.state.scale, event.target.value);\n    }\n\n    propagateChange(note, scale, type) {\n        if(typeof this.props.onChange === \"function\") {\n            this.props.onChange(note, scale, type);\n        }\n    }\n    \n    handleSubmit(event) {\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label style={{\n              marginRight: \"5px\"\n          }}>\n            Key\n            <select value={this.state.note} onChange={this.handleNote}>\n                {this.state.chromaticScale.map((object, i) => <option key={object.toString()} value={object}>{object.replace(/^\\w/, c => c.toUpperCase())}</option>)}\n            </select>\n          </label>\n          <label style={{\n              marginRight: \"5px\"\n          }}>\n            Mode\n            <select value={this.state.scale} onChange={this.handleScale}>\n                {this.state.scales.map((object, i) => <option key={object.toString()} value={object}>{object.replace(/^\\w/, c => c.toUpperCase())}</option>)}\n            </select>\n          </label>\n          <label>\n            Type\n            <select value={this.state.type} onChange={this.handleType}>\n                <option value=\"triads\">Triads</option>\n                <option value=\"chords\">Chords</option>\n            </select>\n          </label>\n        </form>\n      );\n    }\n  }\n\n  export default ChordSelector;","import React, { Component } from 'react';\n\nclass PianoBlackKey extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        value: props.value,\n      };\n    }\n  \n    render() {\n      return (\n        <div style={{width:\"0px\", display: \"flex\"}}>\n          <div style={{\n              display: \"flex\",\n              transform: \"translateX(-50%)\",\n              height: \"70px\",\n              background: \"#150b13\",\n              color: \"white\",\n              border: \"1px solid #150b13\"\n            }}>\n            <div style={{\n              display: \"flex\",\n              height: \"30px\",\n              width: \"30px\",\n              background: this.props.value.pressed ? \"red\": \"#150b13\",\n              marginTop: \"auto\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}>\n              <div style={{ display: \"flex\" }}>\n                { this.props.value.note }\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default PianoBlackKey;","import React, { Component } from 'react';\nimport { Note } from 'tonal'\n\nimport PianoWhiteKey from './PianoWhiteKey.js';\nimport PianoBlackKey from './PianoBlackKey.js';\n\nclass PianoKeyboard extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: null,\n        notesPressed: props.value.notesPressed,\n        pianoKeys: [\n            {\"note\": \"C\", \"type\": \"white\"},\n            {\"note\": \"C#\", \"type\": \"black\"},\n            {\"note\": \"D\", \"type\": \"white\"},\n            {\"note\": \"D#\", \"type\": \"black\"},\n            {\"note\": \"E\", \"type\": \"white\"},\n            {\"note\": \"F\", \"type\": \"white\"},\n            {\"note\": \"F#\", \"type\": \"black\"},\n            {\"note\": \"G\", \"type\": \"white\"},\n            {\"note\": \"G#\", \"type\": \"black\"},\n            {\"note\": \"A\", \"type\": \"white\"},\n            {\"note\": \"A#\", \"type\": \"black\"},\n            {\"note\": \"B\", \"type\": \"white\"},\n        ]\n      };\n    }\n  \n    renderKey(key, index) {\n        key.pressed = this.props.value.notesPressed.map(note => Note.chroma(note)).includes(Note.chroma(key.note));\n        return (\n            (key.type === \"white\") ?\n                <PianoWhiteKey key={\"pianoKey_\" + index} value={ key } /> :\n                <PianoBlackKey key={\"pianoKey_\" + index} value={ key } />\n        )\n    }\n\n    render() {\n        const listItems = this.state.pianoKeys.map((key, index) =>\n            this.renderKey(key, index)\n        );\n        return (\n            <div>\n            <div style={{display: \"flex\", borderLeft: \"1px solid #150b13\"}}>\n                { listItems }\n            </div>\n            <div style={{height:\"20px\"}}></div>\n            </div>\n        );\n    }\n  }\n\n  export default PianoKeyboard;","import React, { Component } from 'react';\nclass PianoWhiteKey extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        key: props.value,\n      };\n    }\n  \n    render() {\n      return (\n        <div style={{\n          display: \"flex\",\n          width: \"40px\",\n          height: \"120px\",\n          background: \"white\",\n          border: \"solid black\",\n          borderWidth: \"1px 1px 1px 0px\"\n          }}>\n          <div style={{\n            display: \"flex\",\n            height: \"40px\",\n            width: \"100%\",\n            background: this.props.value.pressed ? \"red\": \"white\",\n            color: this.props.value.pressed ? \"white\": \"black\",\n            marginTop: \"auto\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}>\n            <div style={{ display: \"flex\"}}>\n              { this.props.value.note }\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  export default PianoWhiteKey;"],"mappings":"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","sourceRoot":""}